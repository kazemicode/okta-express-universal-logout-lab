{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "4 - Test token revocation endpoint with Okta",
  "nextTour": "5 - Redirect the user back to login",
  "steps": [
    {
      "title": "Set app port to public",
      "description": "## Set app port to public\n\nNow that the app has a secure, working UL endpoint. In this section, we'll test the endpoint with Okta.\n\n1. Here in Codespaces, select the PORTS tab below.\n2. Set the [port visibility to public](https://docs.github.com/en/codespaces/developing-in-a-codespace/forwarding-ports-in-your-codespace). \n>This allows requests from Okta to be forwarded to the public address provided by GitHub Codespaces."
    },
    {
      "title": "Provide revocation endpoint info to the Okta",
      "description": "## Provide the token revocation endpoint to Okta\n\n1. Log in to your Okta Admin Dashboard.\n\n1. Go to **Applications > Applications** and select your UL App integration.\n\n1. Under the General tab, scroll down to the **Logout** section.\n\n1. Under **Global token revocation**, select **Edit** and select the **Okta system or admin initiates logout** option.\n\n1. In the **Endpoint URL** field, add your global token revocation endpoint URL.\n>This is of the form `https://expert-garbanzo-p5qv94qr7jf4vr-3000.app.github.dev/global-token-revocation`. \n\n1. Set **Endpoint authentication type** to **Signed JWT**.\n1. Set the **Subject format** to **Email Identifier**\n> This means Okta will send a request identifying the user with the email used to SSO into the OIDC webb app. Okta will authenticate to your Universal Logout endpoint with the secure OAuth2.0 method signed JWT. \n\n1. Select the **Save** button.\n"
    },
    {
      "title": "End the user's session through the Okta Admin Dashboard",
      "description": "## End the user's session through the Okta Admin Dashboard\n\n1. From the Okta Admin Console, go to **Directory > People**.\n1. Search for and select the user **Trinity Anderson**.\n1. Select **More Actions** and then **Clear User Sessions**. \n1. On the pop-up, check the option **Also include logout enabled apps and Okta API tokens before clicking Clear and revoke**. \n1. Select the **Clear and revoke** button.\n> You'll receive a response that says: \"Sessions cleared and tokens revoked.\"\n\nNow, navigate to the web app and click on the Okta icon to return to the main page. At this point, the user's session has been deleted, but the front end doesn't yet know about the user's state. ",
      "selection": {
        "start": {
          "line": 1,
          "character": 4
        },
        "end": {
          "line": 1,
          "character": 59
        }
      }
    }
  ]
}