{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "2 - Build a Universal Logout endpoint to find a user and their active sessions",
  "steps": [
    {
      "file": "universalLogout.js",
      "description": "Add code here to find a user based on information received from the request body. Try on your own or find the [completed code here](https://github.com/oktadev/okta-express-universal-logout-lab/blob/f63e61fab95e94111324b0d87704391aef4c0fdb/universalLogout.js#L14). ",
      "line": 16
    },
    {
      "file": "universalLogout.js",
      "description": "Now that we have the user object, we can associate the user's user ID with the session object.\n\nIn Express, we’ll need to access a user’s session in the session store from the express-session library. We specifically need the MemoryStore object, which has already been imported in this file.",
      "line": 23
    },
    {
      "file": "universalLogout.js",
      "description": "Loop through the list of `sids` and delete all active sessions associated with the user. Try on your own or find the [completed code here](https://github.com/oktadev/okta-express-universal-logout-lab/blob/f63e61fab95e94111324b0d87704391aef4c0fdb/universalLogout.js#L32). ",
      "line": 33,
      "selection": {
        "start": {
          "line": 1,
          "character": 90
        },
        "end": {
          "line": 1,
          "character": 105
        }
      }
    },
    {
      "title": "Test with cURL",
      "description": "Now test your code by making a cURL request. As per the [Global Token Revocation Specification](https://datatracker.ietf.org/doc/html/draft-parecki-oauth-global-token-revocation#name-revocation-request), we are expecting an external request to end a user's session based on the email used to sign in to the app through their IdP. The request will look like the following:\n\n\nPOST /global-token-revocation\\\nHost: example.com\\\nContent-Type: application/json\\\n{\\\n  \"sub_id\": {\\\n    \"format\": \"email\",\\\n    \"email\": \"user@example.com\"\\\n  }\\\n}\n\nOpen a new terminal window, be sure to set the [port to public within Codespaces](https://docs.github.com/en/codespaces/developing-in-a-codespace/forwarding-ports-in-your-codespace) and send the following cURL request to check your code. \n\n```\ncurl --request POST \\\n  --url http://{yourCodespaceUrl}-3000.app.github.dev/global-token-revocation/global-token-revocation \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n  \"sub_id\": {\n    \"format\": \"email\",\n    \"email\": \"trinity@whiterabbit.fake\"\n  }\n}'\n```\n\nThis request will result in a 204 response confirming that a user named Trinity exists and her sessions have been deleted. And sure, we got a successful response, but what is wrong here? This endpoint isn't secure; we've made it available for anyone to access. Let's fix this by adding authentication to protect this endpoint and establish trust between our server and any external service making a request to this route."
    }
  ]
}